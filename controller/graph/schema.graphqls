# Boiler graphql schema

type Subscription {
  boiler: BoilerInfo!
  sensor(name: String!, position: String!): Measure!
}

type Query {
  boiler: BoilerInfo!
  sensor(name: String!, position: String!): Measure
  sensorRange(
    name: String!
    position: String!
    from: Time
    to: Time
  ): [Measure!]!
}

type Measure {
  value: Float!
  timestamp: Time!
}

type BoilerInfo {
  state: State!
  minTemp: Float!
  maxTemp: Float!
  programmedIntervals: [ProgrammedInterval!]!
}

type ProgrammedInterval {
  id: ID!
  start: Time!
  duration: Duration!
  targetTemp: Float!
  repeatDays: [DayOfWeek!]!
  stopped: StopStatus
}

type StopStatus {
  status: Boolean!
  stopTime: Time!
}

enum DayOfWeek {
  MONDAY
  TUESDAY
  WEDNESDAY
  THURSDAY
  FRIDAY
  SATURDAY
  SUNDAY
}

enum State {
  ON
  OFF
  UNKNOWN
}

scalar Time

scalar Duration

# ---------------------------------------------
# Mutations
# ---------------------------------------------
type Mutation {
  updateBoiler(state: State, minTemp: Float, maxTemp: Float): BoilerInfo!
  setProgrammedInterval(
    id: ID
    start: Time!
    duration: Duration!
    targetTemp: Float!
    repeatDays: [DayOfWeek!]!
  ): ProgrammedInterval!
  stopProgrammedInterval(id: ID!): Boolean!
  deleteProgrammedInterval(id: ID!): Boolean!
}
